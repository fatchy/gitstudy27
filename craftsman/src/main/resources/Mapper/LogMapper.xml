<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.craftsman.ssm.mapper.LogMapper" >
  <resultMap id="BaseResultMap" type="com.craftsman.ssm.entity.Log" >
    <id column="logtb_id" property="logtbId" jdbcType="INTEGER" />
    <result column="logtb_time" property="logtbTime" jdbcType="TIMESTAMP" />
    <result column="logtb_content" property="logtbContent" jdbcType="VARCHAR" />
    <result column="alternative1" property="alternative1" jdbcType="VARCHAR" />
    <result column="alternative2" property="alternative2" jdbcType="VARCHAR" />
    <result column="alternative3" property="alternative3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    logtb_id, logtb_time, logtb_content, alternative1, alternative2, alternative3
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from logtb
    where logtb_id = #{logtbId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from logtb
    where logtb_id = #{logtbId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.craftsman.ssm.entity.Log" >
    insert into logtb (logtb_id, logtb_time, logtb_content, 
      alternative1, alternative2, alternative3
      )
    values (#{logtbId,jdbcType=INTEGER}, #{logtbTime,jdbcType=TIMESTAMP}, #{logtbContent,jdbcType=VARCHAR}, 
      #{alternative1,jdbcType=VARCHAR}, #{alternative2,jdbcType=VARCHAR}, #{alternative3,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.craftsman.ssm.entity.Log" >
    insert into logtb
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logtbId != null" >
        logtb_id,
      </if>
      <if test="logtbTime != null" >
        logtb_time,
      </if>
      <if test="logtbContent != null" >
        logtb_content,
      </if>
      <if test="alternative1 != null" >
        alternative1,
      </if>
      <if test="alternative2 != null" >
        alternative2,
      </if>
      <if test="alternative3 != null" >
        alternative3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logtbId != null" >
        #{logtbId,jdbcType=INTEGER},
      </if>
      <if test="logtbTime != null" >
        #{logtbTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logtbContent != null" >
        #{logtbContent,jdbcType=VARCHAR},
      </if>
      <if test="alternative1 != null" >
        #{alternative1,jdbcType=VARCHAR},
      </if>
      <if test="alternative2 != null" >
        #{alternative2,jdbcType=VARCHAR},
      </if>
      <if test="alternative3 != null" >
        #{alternative3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.craftsman.ssm.entity.Log" >
    update logtb
    <set >
      <if test="logtbTime != null" >
        logtb_time = #{logtbTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logtbContent != null" >
        logtb_content = #{logtbContent,jdbcType=VARCHAR},
      </if>
      <if test="alternative1 != null" >
        alternative1 = #{alternative1,jdbcType=VARCHAR},
      </if>
      <if test="alternative2 != null" >
        alternative2 = #{alternative2,jdbcType=VARCHAR},
      </if>
      <if test="alternative3 != null" >
        alternative3 = #{alternative3,jdbcType=VARCHAR},
      </if>
    </set>
    where logtb_id = #{logtbId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.craftsman.ssm.entity.Log" >
    update logtb
    set logtb_time = #{logtbTime,jdbcType=TIMESTAMP},
      logtb_content = #{logtbContent,jdbcType=VARCHAR},
      alternative1 = #{alternative1,jdbcType=VARCHAR},
      alternative2 = #{alternative2,jdbcType=VARCHAR},
      alternative3 = #{alternative3,jdbcType=VARCHAR}
    where logtb_id = #{logtbId,jdbcType=INTEGER}
  </update>
</mapper>